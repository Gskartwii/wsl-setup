source "%val{config}/plugins/plug.kak/rc/plug.kak"

plug "ul/kak-lsp" do %{
    cargo build --release --locked
    cargo install --force --path .
} config %{
    hook global WinSetOption filetype=(rust|go) %{
        echo -debug "Enabling LSP for filetype %opt{filetype}"
        set-option window lsp_auto_highlight_references true
        set-option window lsp_hover_anchor false
        set-option window lsp_hover_max_lines 10
        lsp-auto-hover-enable

        lsp-enable-window
    }

    set global lsp_diagnostic_line_error_sign '!'
    set global lsp_diagnostic_line_warning_sign '>'

    map global user d ':lsp-diagnostics<ret>' -docstring 'Diagnostics'

    declare-option -hidden str modeline_progress ""
    define-command -params 4 -override lsp-handle-progress %{
        echo -debug "Handling progress"
        set global modeline_progress %sh{
            echo $1${2+": $2"}${3:+" $3%"}${4:+" OK"}
        }
    }
}

colorscheme droplet

plug "andreyorst/powerline.kak" config %{
    powerline-start
} defer powerline %{
    powerline-theme droplet
}
plug "danr/kakoune-easymotion" config %{
	map global user e ':enter-user-mode easymotion<ret>' -docstring 'Easymotion'
}

plug "andreyorst/fzf.kak" config %{
    map global normal <c-p> ': fzf-mode<ret>'
    map global user , ': fzf-mode<ret>v'

} defer "fzf_vcs" %{
	set-option global fzf_git_command 'git ls-files --cached --others --modified --exclude-standard'
}

set-option global tabstop 4
set-option global indentwidth 4
set global modelinefmt "%%opt{modeline_progress}%opt{modelinefmt}"

hook global WinSetOption filetype=markdown %{
    set-option window autowrap_column 80
    autowrap-enable
}

map global user q ':db<ret>' -docstring 'Close buffer'

hook global WinSetOption filetype=rust %{
    set-option window formatcmd 'rustfmt'
}
hook global WinSetOption filetype=go %{
    set-option window formatcmd 'gofmt'
}
